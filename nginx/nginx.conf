user nginx;
worker_processes auto;
worker_rlimit_nofile 100000;

events
{
  worker_connections 1024;
  multi_accept on;
  use epoll;
}
http
{
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  limit_req_zone "$http_cf_connecting_ip" zone=zone:100m rate=50r/s;
  log_format main '$http_cf_connecting_ip $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent '
  '"$http_user_agent" "$http_authorization"';

  underscores_in_headers on;

  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log;
  client_max_body_size 40M;

  # send headers in one peace, its better then sending them one by one
  tcp_nopush on;

  # don't buffer data sent, good for small data bursts in real time
  tcp_nodelay on;

  # allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;

  # Security reasons, turn off nginx versions
  server_tokens off;

  server
  {
    server_name chat.yusufcirak.net;

    # listen 80;
    # listen [::]:80;

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    http2_push_preload on;

    # listen 443 ssl http3 reuseport;
    # listen [::]:443 ssl http3 reuseport;

    limit_req zone=zone burst=50 nodelay;



    # Request buffering in not currently supported for HTTP/3.
    #proxy_request_buffering off;
    
    # Add Alt-Svc header to negotiate HTTP/3.
    # add_header alt-svc 'h3-27=":443"; ma=86400';

    ssl_certificate /etc/ssl/yusufciraknet/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/yusufciraknet/private/nginx-selfsigned.key;

    # ssl_quic on;
    ssl_early_data on;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location /_api
    {
        proxy_pass http://backend:80;
    }

    location /_chat
    {
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        proxy_pass http://backend:80;
        
    }

    location /
    {
        # serve static files from the nginx container
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        proxy_read_timeout 360s;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        sendfile_max_chunk 1m;
        proxy_pass http://frontend:80;
    }

  }

  server
  {
    server_name tumeraltunbas.com;


    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    http2_push_preload on;


    limit_req zone=zone burst=50 nodelay;


    ssl_certificate /etc/ssl/tumeraltunbascom/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/tumeraltunbascom/private/nginx-selfsigned.key;

    # ssl_quic on;
    ssl_early_data on;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    resolver   8.8.8.8;
    proxy_redirect  off;


    location /api
    {
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        proxy_pass http://tumerbackend:8080;  # Proxy requests to your API server 
    }

    location / 
    {
      proxy_pass http://tumerfrontend:80;
    }
  }
}