# user nginx;
worker_processes auto;
worker_rlimit_nofile 100000;

events {
  worker_connections 1024;
  multi_accept on;
  use epoll;
}

    rtmp {
        server {
            listen 1935;

            application live {
                live on;
                record off;
                push rtmp://streaming-app-nginx-rtmp/live;
            }
        }
    }
http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  #limit_req_zone "$http_cf_connecting_ip" zone=zone:100m rate=50r/s;

  #limit_req zone=zone burst=50 nodelay;

log_format main '
  IpAddress: $http_cf_connecting_ip
  TimeLocal: $time_local
  Request: $request
  Status: $status
  UserAgent: $http_user_agent
  Scheme: $scheme
  ';

  underscores_in_headers on;

  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log;
  client_max_body_size 40M;

  # send headers in one peace, its better then sending them one by one
  tcp_nopush on;

  # don't buffer data sent, good for small data bursts in real time
  tcp_nodelay on;

  # allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;

  # Security reasons, turn off nginx versions
  server_tokens off;

  ssl_early_data on;


  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;


    server {
        server_name stream.yusufcirak.net;
        listen 443 ssl;
        listen [::]:443 ssl;

        ssl_certificate /etc/ssl/yusufciraknet/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/yusufciraknet/private/nginx-selfsigned.key;

        include       mime.types;
        default_type  application/octet-stream;
        sendfile        on;
        keepalive_timeout  30;
        
        location /hls {
            proxy_pass http://streaming-app-nginx-rtmp:80;
            # Disable cache
            add_header Cache-Control no-cache;

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
        }

        location /api {
          proxy_pass http://streaming-app-backend:8080;
        }

        location /_stream {
          proxy_buffering off;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_cache_bypass $http_upgrade;
          proxy_pass http://streaming-app-backend:8080;

        }

        location / {
          # serve static files from the nginx container
          proxy_set_header Connection '';
          proxy_http_version 1.1;
          proxy_read_timeout 360s;
          sendfile_max_chunk 1m;
          proxy_pass http://streaming-app-frontend:80;
        }
    }

  server {
    server_name yusufcirak.net;

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /etc/ssl/yusufciraknet/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/yusufciraknet/private/nginx-selfsigned.key;

    location / {
      proxy_pass http://portfolio:80;
    }

  }

  server {
    server_name chat.yusufcirak.net;

    listen 443 ssl;
    listen [::]:443 ssl;



    ssl_certificate /etc/ssl/yusufciraknet/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/yusufciraknet/private/nginx-selfsigned.key;


    location /_api {
      proxy_pass http://backend:80;
    }

    location /_chat {
      proxy_buffering off;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_cache_bypass $http_upgrade;
      proxy_pass http://backend:80;

    }

    location / {
      # serve static files from the nginx container
      proxy_set_header Connection '';
      proxy_http_version 1.1;
      proxy_read_timeout 360s;
      sendfile_max_chunk 1m;
      proxy_pass http://frontend:80;
    }

  }

  # server {
  #   server_name tumeraltunbas.com;

  #   listen 443 ssl http2;
  #   listen [::]:443 ssl http2;

  #   ssl_certificate /etc/ssl/tumeraltunbascom/certs/nginx-selfsigned.crt;
  #   ssl_certificate_key /etc/ssl/tumeraltunbascom/private/nginx-selfsigned.key;


  #   proxy_set_header Host $host;
  #   proxy_set_header X-Forwarded-Proto $scheme;

  #   location /api {
  #     proxy_buffer_size 128k;
  #     proxy_buffers 4 256k;
  #     proxy_busy_buffers_size 256k;
  #     proxy_pass http://ta-backend:8080; # Proxy requests to your API server
  #   }

  #   location / {
  #     proxy_pass http://ta-frontend:80;
  #   }
  # }
}
